Question Link : https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/

Solution : 
class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] ans = new int[2] ; 
        ans[0] = -1 ; 
        ans[1] = -1 ; 
        
        boolean found = false ; 
        int beg = 0  , end = nums.length - 1  , mid = 0 ; 
        while(beg <= end){
            mid = (beg+end) / 2 ; 
            
            if(nums[mid] == target){
                found = true ; 
                break ; 
            }else if(nums[mid] > target){
                end = mid - 1 ; 
            }else{
                beg = mid +1 ; 
            }
        }
        
        System.out.println(mid) ; 
        if(!found){ //if element not found
            return ans ; 
        }
        
        //go reverse and forward from the index found so as to see if more occurences of target value or not
        beg = mid ;
        end = mid; 
        
        while(beg >= 0 && nums[beg] == nums[mid]){
            --beg ; 
        }
        ans[0] = beg+1 ; 
        
        while(end < nums.length && nums[end] == nums[mid]){
            ++end ; 
        }
        ans[1] = end-1 ;
        return ans;  
    }
}
