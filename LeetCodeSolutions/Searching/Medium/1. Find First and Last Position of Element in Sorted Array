Question Link : https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/

Solution 
class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] ans = new int[2] ; 
        
        ans[0] = binarySearch(nums , target , 1) ; 
        ans[1] = binarySearch(nums , target , 0) ; 
        return ans ; 
    }
    
    public int binarySearch(int[] nums , int target , int firstIndex) {
        int start = 0  , end = nums.length - 1 ; 
        int ans = -1 ; 
        while(start <= end){
            int mid = start  + (end - start) / 2 ;
            if( nums[mid] == target ){
                ans = mid ; //possible answer
                if( firstIndex == 1 ){ //means we need to find the first index which if there will be on the left side of this mid element
                    end = mid - 1 ; 
                }else{ //we want to find the last index if exist will be on the right hand side of the current mid element
                    start = mid + 1 ; 
                }
            }else if(nums[mid] > target){
                end = mid - 1 ; 
            }else{
                start = mid + 1 ;
            }
        }
        return ans ; 
    }
}
